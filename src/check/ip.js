/**
 * ip地址校验
 *
 * 分析IP地址的组成特点：0-199、200-249、250-255。
 * 这三种情况可以分开考虑:
 * 1. 250-255：特点：三位数，百位是2，十位是5，个位是0~5，用正则表达式可以写成：25[0-5]
 * 2. 200-249：特点：三位数，百位是2，十位是0~4，个位是0~9，用正则表达式可以写成：2[0-4]\d
 * 3. 0-199：这个可以继续分拆，这样写起来更加简单明了
 * 3.1. 0-9：特点：一位数，个位是0~9，用正则表达式可以写成：\d
 * 3.2. 10-99：特点：二位数，十位是1~9，个位是0~9，用正则表达式可以写成：[1-9]\d
 * 3.3. 100-199：特点：三位数，百位是1，十位是0~9，个位是0~9，用正则表达式可以写成：1\d{2}
 * 于是0-99的正则表达式可以合写为：[1-9]?\d
 * 那么0-199用正则表达式就可以写成：1\d{2}|[1-9]?\d
 * 这样0-255的正则表达式就可以写成：25[0-5]|2[0-4]\d|(1\d{2}|[1-9]?\d)
 *
 * @param {*} value - The value to check.
 * @return {Boolean} Return `true` if validated, else `false`.
 * @example
 *
 * ip('192.168.0.1');
 * // => true
 */
export default function ip(value) {
  const pattern = '(25[0-5]|2[0-4]\\d|(1\\d{2}|[1-9]?\\d))';
  const regexp = new RegExp(`^(${pattern}\\.){3}${pattern}$`);
  return regexp.test(value);
}
